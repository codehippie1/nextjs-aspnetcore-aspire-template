trigger:
  branches:
    include:
      - main
  paths:
    include:
      - backend/**

pool:
  vmImage: 'ubuntu-latest'

variables:
  solution: 'backend/AspireApp/AspireApp.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  dockerRegistryServiceConnection: 'your-acr-service-connection'
  imageRepository: 'aspireapp-api'
  containerRegistryName: 'your-acr-name'
  dockerfilePath: 'backend/AspireApp/AspireApp.ApiService/Dockerfile'
  tag: '$(Build.BuildId)'
  appServiceName: 'your-app-service-name'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
          latest

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy to App Service
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebAppContainer@1
            displayName: Deploy to Azure App Service
            inputs:
              azureSubscription: 'your-azure-subscription'
              appName: $(appServiceName)
              imageName: $(containerRegistryName).azurecr.io/$(imageRepository):$(tag)
              containerCommand: '' 